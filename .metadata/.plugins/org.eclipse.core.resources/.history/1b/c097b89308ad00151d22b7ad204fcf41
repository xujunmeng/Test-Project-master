package ff;

import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Iterator;
import java.util.List;

import javax.sql.DataSource;

import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;
import org.springframework.jdbc.core.JdbcTemplate;

/**
 * @author junmeng.xu
 * @date 2015年12月25日下午5:55:07
 */
public class TransDao {

	public static final String DATA_SOURCE_2 = "springOracle2";

	public static final String DATA_SOURCE_220 = "springOracle220";

	private static Integer years = null;

	private static Integer mouth = null;

	public static JdbcTemplate jdbcTemplate;

	public void setJdbcTemplate(JdbcTemplate jdbcTemplate) {
		TransDao.jdbcTemplate = jdbcTemplate;
	}

	public void setJdbcTemplate2(JdbcTemplate jdbcTemplate) {
		TransDao.jdbcTemplate = jdbcTemplate;
	}

	@SuppressWarnings("deprecation")
	public void test2() {

		Calendar from = Calendar.getInstance();
		from.set(years, mouth, 1);
		from.add(Calendar.DAY_OF_MONTH, -1);

		Calendar end = Calendar.getInstance();
		end.set(years, mouth, 1);
		end.add(Calendar.MONTH, 1);
		SimpleDateFormat formatter = new SimpleDateFormat ("yyyy-MM-dd HH:mm:ss");
		String datetime = formatter.format(from.getTime()); 
		String sql = "select ob_textid_0022 from juchao.tb_text_0022 where ob_rectime_0022 between"
				+ from.getTime() + " and " + end.getTime();
		List list = jdbcTemplate.queryForList(sql);
		Iterator iterator = list.iterator();
		while (iterator.hasNext()) {
			Object next = iterator.next();
			System.out.println(next);
		}
	}

	@SuppressWarnings("deprecation")
	public void test220() {
		String sql = "select count(*) from juchao.tb_text_0022";
		int queryForInt = jdbcTemplate.queryForInt(sql);
		System.out.println(queryForInt);
	}

	public static void main(String[] args) {
		ApplicationContext context = new ClassPathXmlApplicationContext(
				"applicationContext.xml");

		DataSource dataSource2 = (DataSource) context.getBean(DATA_SOURCE_2);
		jdbcTemplate.setDataSource(dataSource2);
		TransDao dao2 = (TransDao) context.getBean("TransDao", TransDao.class);

		for (String str : args) {
			years = Integer.parseInt(str);
			for (int i = 0; i < 12; i++) {
				mouth = i;
				dao2.test2();
			}
		}

		// DataSource dataSource220 = (DataSource)
		// context.getBean(DATA_SOURCE_220);
		// jdbcTemplate.setDataSource(dataSource220);
		// TransDao dao1 = (TransDao) context.getBean("TransDao",
		// TransDao.class);
		// dao1.test220();

	}

	public static void trans(String[] args) {
		for (String str : args) {
			years = Integer.parseInt(str);
			for (int i = 0; i < 12; i++) {
				mouth = i;

			}
		}

	}
}
